Given n points on a 2D plane where points[i] = [xi, yi], Return the widest vertical area between two points such that no points are inside the area.

A vertical area is an area of fixed-width extending infinitely along the y-axis (i.e., infinite height). The widest vertical area is the one with the maximum width.

Note that points on the edge of a vertical area are not considered included in the area.

Input: points = [[8,7],[9,9],[7,4],[9,7]]
Output: 1
Explanation: Both the red and the blue area are optimal.

Code - 

import java.util.Arrays;
class Solution {
    public int maxWidthOfVerticalArea(int[][] points) {
        int[] arr = new int[points.length];
        for(int i=0; i<points.length; i++){
            arr[i] = points[i][0];
        }
        Arrays.sort(arr);
        int res=0;
        for(int j=0; j<arr.length-1; j++){
            res=Math.max((arr[j+1] - arr[j]), res);
        }
        return res;
    }
}

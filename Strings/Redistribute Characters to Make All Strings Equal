You are given an array of strings words (0-indexed).

In one operation, pick two distinct indices i and j, where words[i] is a non-empty string, and move any character from words[i] to any position in words[j].

Return true if you can make every string in words equal using any number of operations, and false otherwise.

 

Example 1:

Input: words = ["abc","aabc","bc"]
Output: true
Explanation: Move the first 'a' in words[1] to the front of words[2],
to make words[1] = "abc" and words[2] = "abc".
All the strings are now equal to "abc", so return true.

Code - 
class Solution {
    public boolean makeEqual(String[] words) {
        int[] counts = new int[26];
        for(String word: words){
            for(char s: word.toCharArray()){
                counts[s-'a']++;
            }
        }
        int n = words.length;
        for(int val: counts){
            if(val % n != 0){
                return false;
            }
        }
        return true;
    }
}

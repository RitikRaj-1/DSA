You are given an n x n 2D matrix representing an image, rotate the image by 90 degrees (clockwise).

You have to rotate the image in-place, which means you have to modify the input 2D matrix directly. DO NOT allocate another 2D matrix and do the rotation.
Input: matrix = [[1,2,3],[4,5,6],[7,8,9]]
Output: [[7,4,1],[8,5,2],[9,6,3]]

soln-
class Solution {
    public void rotate(int[][] matrix) {
        int n = matrix.length;
        for(int r=0; r<n-1; r++){
            for(int c=r+1; c<n; c++){
                int a = matrix[r][c];
                matrix[r][c] = matrix[c][r];
                matrix[c][r] = a;
            }
        }
        for(int i =0; i<n; i++){
            int start = 0, end = n-1;
            while(start < end){
            int temp = matrix[i][start];
            matrix[i][start] = matrix[i][end];
            matrix[i][end] = temp;
            start++;
            end--;
        }
        }
    }
}
